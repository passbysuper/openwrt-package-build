name: Sync Source

on:
  push:
    paths:
      - '.github/workflows/Sync_packages.yml'
      - '.github/diy/Source'
  schedule:
    - cron: 0 */4 * * *
  repository_dispatch:
  workflow_dispatch:  # 添加此行，支持手动触发
  
jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id
    runs-on: ubuntu-latest

    name: Update ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [main]

    steps:
    - name: Checkout
      uses: actions/checkout@main
      with:
        fetch-depth: 0

    - name: Initialization environment
      run : |
        git config --global user.email "${{ github.actor }}@users.noreply.github.com"
        git config --global user.name "${{ github.actor }}"
        sudo timedatectl set-timezone "Asia/Shanghai"
        
    - name: Clone packages
      run: |
        cd $GITHUB_WORKSPACE
        chmod +x .github/diy/Source
        git clone -b ${{matrix.target}} https://github.com/${{ github.repository }}.git ${{matrix.target}}
        cd ${{matrix.target}}
        git rm -r --cache * >/dev/null 2>&1 &
        rm -rf `find ./* -maxdepth 0 -type d ! -name "diy"` >/dev/null 2>&1
        $GITHUB_WORKSPACE/.github/diy/Source
        bash /$GITHUB_WORKSPACE/.github/diy/convert_translation
        bash /$GITHUB_WORKSPACE/.github/diy/create_acl_for_luci -a
        bash /$GITHUB_WORKSPACE/.github/diy/modify

    - name: SSH（INPUT"q" ➡️ RUN："./mv" ➡️ “exit”）
      if: false  # 跳过该步骤
      uses: mxschmitt/action-tmate@v3

    - name: Upload
      run: |
        if [ -e $GITHUB_WORKSPACE/LICENSE ]; then
          cp $GITHUB_WORKSPACE/LICENSE $GITHUB_WORKSPACE/${{matrix.target}}
        fi
        if [ -e $GITHUB_WORKSPACE/README.md ]; then
          cp $GITHUB_WORKSPACE/README.md $GITHUB_WORKSPACE/${{matrix.target}}
        fi
        cd $GITHUB_WORKSPACE/${{matrix.target}}
        if git status --porcelain | grep .; then
          git add .
          git commit -am "update $(date '+%Y-%m-%d %H:%M:%S')"
          git push --quiet "https://${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git" HEAD:${{ matrix.target }}
        else
          echo "nothing to commit"
          exit 0
        fi || exit 0


  check:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@main
      with:
        fetch-depth: 0

    - name: Check for changes
      id: detect_changes
      run: |
        # 调试：显示当前的提交信息
        echo "Raw git diff output:"
        git diff --name-only HEAD~1 HEAD

        # 获取变更的目录列表（基于 git diff）
        CHANGED_DIRS_DIFF=$(git diff --name-only HEAD~1 HEAD | xargs -I {} dirname {} | sort -u | grep -vE '^\.github$|^README.md$' || true)

        # 调试：显示 git diff 处理后的变更目录
        echo "Changed directories from git diff:"
        echo "$CHANGED_DIRS_DIFF"

        # 获取未跟踪的文件和目录（基于 git status）
        CHANGED_DIRS_STATUS=$(git status --porcelain | awk '{print $2}' | xargs -I {} dirname {} | sort -u | grep -vE '^\.github$|^README.md$' || true)

        # 调试：显示 git status 处理后的变更目录
        echo "Changed directories from git status:"
        echo "$CHANGED_DIRS_STATUS"

        # 合并 git diff 和 git status 的结果
        CHANGED_DIRS=$(echo -e "$CHANGED_DIRS_DIFF\n$CHANGED_DIRS_STATUS" | sort -u | tr '\n' ' ')

        # 调试：显示最终变更目录
        echo "Changed directories (final):"
        echo "$CHANGED_DIRS"

        # 如果有变动的目录，则保存到 GitHub 环境变量
        if [[ -n "$CHANGED_DIRS" ]]; then
            echo "changes=true" >> $GITHUB_ENV
            echo "changed_dirs=$CHANGED_DIRS" >> $GITHUB_ENV
        else
            echo "changes=false" >> $GITHUB_ENV
        fi

        # 调试：显示环境变量的内容
        echo "Environment variables set:"
        cat $GITHUB_ENV



            




    - name: Trigger Package_Build workflow
      if: env.changes == 'true'
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: .github/workflows/Package_Build.yml  # 确保路径正确
        token: ${{ secrets.GITHUB_TOKEN }}
        inputs: '{"packages": "${{ env.changed_dirs }}"}'

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 1
        keep_minimum_runs: 5
